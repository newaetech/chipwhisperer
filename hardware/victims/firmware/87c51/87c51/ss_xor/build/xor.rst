                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module xor
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _xor_encrypt
                                     12 ;--------------------------------------------------------
                                     13 ; special function registers
                                     14 ;--------------------------------------------------------
                                     15 	.area RSEG    (ABS,DATA)
      000000                         16 	.org 0x0000
                                     17 ;--------------------------------------------------------
                                     18 ; special function bits
                                     19 ;--------------------------------------------------------
                                     20 	.area RSEG    (ABS,DATA)
      000000                         21 	.org 0x0000
                                     22 ;--------------------------------------------------------
                                     23 ; overlayable register banks
                                     24 ;--------------------------------------------------------
                                     25 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                         26 	.ds 8
                                     27 ;--------------------------------------------------------
                                     28 ; internal ram data
                                     29 ;--------------------------------------------------------
                                     30 	.area DSEG    (DATA)
                                     31 ;--------------------------------------------------------
                                     32 ; overlayable items in internal ram 
                                     33 ;--------------------------------------------------------
                                     34 ;--------------------------------------------------------
                                     35 ; indirectly addressable internal ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area ISEG    (DATA)
                                     38 ;--------------------------------------------------------
                                     39 ; absolute internal ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area IABS    (ABS,DATA)
                                     42 	.area IABS    (ABS,DATA)
                                     43 ;--------------------------------------------------------
                                     44 ; bit data
                                     45 ;--------------------------------------------------------
                                     46 	.area BSEG    (BIT)
                                     47 ;--------------------------------------------------------
                                     48 ; paged external ram data
                                     49 ;--------------------------------------------------------
                                     50 	.area PSEG    (PAG,XDATA)
                                     51 ;--------------------------------------------------------
                                     52 ; external ram data
                                     53 ;--------------------------------------------------------
                                     54 	.area XSEG    (XDATA)
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area XABS    (ABS,XDATA)
                                     59 ;--------------------------------------------------------
                                     60 ; external initialized ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area XISEG   (XDATA)
                                     63 	.area HOME    (CODE)
                                     64 	.area GSINIT0 (CODE)
                                     65 	.area GSINIT1 (CODE)
                                     66 	.area GSINIT2 (CODE)
                                     67 	.area GSINIT3 (CODE)
                                     68 	.area GSINIT4 (CODE)
                                     69 	.area GSINIT5 (CODE)
                                     70 	.area GSINIT  (CODE)
                                     71 	.area GSFINAL (CODE)
                                     72 	.area CSEG    (CODE)
                                     73 ;--------------------------------------------------------
                                     74 ; global & static initialisations
                                     75 ;--------------------------------------------------------
                                     76 	.area HOME    (CODE)
                                     77 	.area GSINIT  (CODE)
                                     78 	.area GSFINAL (CODE)
                                     79 	.area GSINIT  (CODE)
                                     80 ;--------------------------------------------------------
                                     81 ; Home
                                     82 ;--------------------------------------------------------
                                     83 	.area HOME    (CODE)
                                     84 	.area HOME    (CODE)
                                     85 ;--------------------------------------------------------
                                     86 ; code
                                     87 ;--------------------------------------------------------
                                     88 	.area CSEG    (CODE)
                                     89 ;------------------------------------------------------------
                                     90 ;Allocation info for local variables in function 'xor_encrypt'
                                     91 ;------------------------------------------------------------
                                     92 ;key                       Allocated to stack - _bp -5
                                     93 ;state                     Allocated to stack - _bp +1
                                     94 ;i                         Allocated to stack - _bp +5
                                     95 ;sloc0                     Allocated to stack - _bp +4
                                     96 ;------------------------------------------------------------
                                     97 ;	xor.c:9: void xor_encrypt(uint8_t* state, uint8_t* key)
                                     98 ;	-----------------------------------------
                                     99 ;	 function xor_encrypt
                                    100 ;	-----------------------------------------
      0004D9                        101 _xor_encrypt:
                           000007   102 	ar7 = 0x07
                           000006   103 	ar6 = 0x06
                           000005   104 	ar5 = 0x05
                           000004   105 	ar4 = 0x04
                           000003   106 	ar3 = 0x03
                           000002   107 	ar2 = 0x02
                           000001   108 	ar1 = 0x01
                           000000   109 	ar0 = 0x00
      0004D9 C0 08            [24]  110 	push	_bp
      0004DB 85 81 08         [24]  111 	mov	_bp,sp
      0004DE C0 82            [24]  112 	push	dpl
      0004E0 C0 83            [24]  113 	push	dph
      0004E2 C0 F0            [24]  114 	push	b
      0004E4 05 81            [12]  115 	inc	sp
      0004E6 05 81            [12]  116 	inc	sp
                                    117 ;	xor.c:12: for(i = 0; i < BLOCK_LEN; i++)
      0004E8 E5 08            [12]  118 	mov	a,_bp
      0004EA 24 05            [12]  119 	add	a,#0x05
      0004EC F8               [12]  120 	mov	r0,a
      0004ED 76 00            [12]  121 	mov	@r0,#0x00
      0004EF                        122 00102$:
                                    123 ;	xor.c:14: state[i] ^= key[i];
      0004EF A8 08            [24]  124 	mov	r0,_bp
      0004F1 08               [12]  125 	inc	r0
      0004F2 E5 08            [12]  126 	mov	a,_bp
      0004F4 24 05            [12]  127 	add	a,#0x05
      0004F6 F9               [12]  128 	mov	r1,a
      0004F7 E7               [12]  129 	mov	a,@r1
      0004F8 26               [12]  130 	add	a,@r0
      0004F9 FA               [12]  131 	mov	r2,a
      0004FA E4               [12]  132 	clr	a
      0004FB 08               [12]  133 	inc	r0
      0004FC 36               [12]  134 	addc	a,@r0
      0004FD FB               [12]  135 	mov	r3,a
      0004FE 08               [12]  136 	inc	r0
      0004FF 86 07            [24]  137 	mov	ar7,@r0
      000501 8A 82            [24]  138 	mov	dpl,r2
      000503 8B 83            [24]  139 	mov	dph,r3
      000505 8F F0            [24]  140 	mov	b,r7
      000507 E5 08            [12]  141 	mov	a,_bp
      000509 24 04            [12]  142 	add	a,#0x04
      00050B F8               [12]  143 	mov	r0,a
      00050C 12 05 71         [24]  144 	lcall	__gptrget
      00050F F6               [12]  145 	mov	@r0,a
      000510 E5 08            [12]  146 	mov	a,_bp
      000512 24 FB            [12]  147 	add	a,#0xfb
      000514 F8               [12]  148 	mov	r0,a
      000515 E5 08            [12]  149 	mov	a,_bp
      000517 24 05            [12]  150 	add	a,#0x05
      000519 F9               [12]  151 	mov	r1,a
      00051A E7               [12]  152 	mov	a,@r1
      00051B 26               [12]  153 	add	a,@r0
      00051C FC               [12]  154 	mov	r4,a
      00051D E4               [12]  155 	clr	a
      00051E 08               [12]  156 	inc	r0
      00051F 36               [12]  157 	addc	a,@r0
      000520 FD               [12]  158 	mov	r5,a
      000521 08               [12]  159 	inc	r0
      000522 86 06            [24]  160 	mov	ar6,@r0
      000524 8C 82            [24]  161 	mov	dpl,r4
      000526 8D 83            [24]  162 	mov	dph,r5
      000528 8E F0            [24]  163 	mov	b,r6
      00052A 12 05 71         [24]  164 	lcall	__gptrget
      00052D FC               [12]  165 	mov	r4,a
      00052E E5 08            [12]  166 	mov	a,_bp
      000530 24 04            [12]  167 	add	a,#0x04
      000532 F8               [12]  168 	mov	r0,a
      000533 E6               [12]  169 	mov	a,@r0
      000534 62 04            [12]  170 	xrl	ar4,a
      000536 8A 82            [24]  171 	mov	dpl,r2
      000538 8B 83            [24]  172 	mov	dph,r3
      00053A 8F F0            [24]  173 	mov	b,r7
      00053C EC               [12]  174 	mov	a,r4
      00053D 12 05 56         [24]  175 	lcall	__gptrput
                                    176 ;	xor.c:12: for(i = 0; i < BLOCK_LEN; i++)
      000540 E5 08            [12]  177 	mov	a,_bp
      000542 24 05            [12]  178 	add	a,#0x05
      000544 F8               [12]  179 	mov	r0,a
      000545 06               [12]  180 	inc	@r0
      000546 E5 08            [12]  181 	mov	a,_bp
      000548 24 05            [12]  182 	add	a,#0x05
      00054A F8               [12]  183 	mov	r0,a
      00054B B6 10 00         [24]  184 	cjne	@r0,#0x10,00110$
      00054E                        185 00110$:
      00054E 40 9F            [24]  186 	jc	00102$
      000550 85 08 81         [24]  187 	mov	sp,_bp
      000553 D0 08            [24]  188 	pop	_bp
      000555 22               [24]  189 	ret
                                    190 	.area CSEG    (CODE)
                                    191 	.area CONST   (CODE)
                                    192 	.area XINIT   (CODE)
                                    193 	.area CABS    (ABS,CODE)

#!/bin/bash
# This script extracts a CMSIS-Pack file to the specified destination CMSIS root folder.
# Usage: PackInstall.bash packFile.pack [destFolder] [-force]
#    -force option removes/overwrites existing destination files.
# Note that Pack files do not have to be installed in a Keil installation based folder.
set -ue$-${CY_DEBUG+xv}

# Functions
function printUsage {
    echo "Usage: $1 file.pack [destFolder] [-force]"
	echo "   file.pack : CMSIS-Pack file generated by PSoC Creator"
	echo "   destFolder : output folder (optional)"
	echo "   -force : force overwrite of existing output folder contents (optional)"
}

# Check that number of arguments is between 1 and 3
if [ $# -lt 1 -o $# -gt 3 ]; then
    printUsage $0
    exit 201
fi 

# Handle -force either with or without rootFolder specified
FORCE="0"
INPUT=
OUTPUT=
RET=
# iterate through all script arguments
while (( $# > 0 )); do
   case "$1" in
   # args can be in any order
   -force)
      FORCE="1"
   ;;

   *)
   # if arg isn't a recognized flag, it's a token
   if [ "$INPUT" == "" ]; then
       INPUT="$1"
   elif [ "$OUTPUT" == "" ]; then
       OUTPUT="$1";
   else
       echo "Extraneous argument detected: $1" 
	   printUsage $0
	   exit 201
   fi	   
   ;;
esac

shift 
done

# Does the input file exist?
if [ ! -e "$INPUT" ]; then
   echo "Could not find input file $INPUT"
   exit 202
fi

# Separate out Vendor, PackName and Version strings
# Verify input file name is in proper CMSIS format
INPUT_FILE=$(basename "$INPUT")
TOKENS=
IFS='.' read -ra TOKENS <<< "$INPUT_FILE"
if [ ${#TOKENS[@]} -lt 6 ]; then
   echo "Pack file name not in standard format: VENDOR.PACKNAME.VER1.VER2.VER3.pack"
   exit 203
fi
VENDORSTR=${TOKENS[0]}
NAMESTR=${TOKENS[1]}
VERSIONSTR=${TOKENS[2]}.${TOKENS[3]}.${TOKENS[4]}
if [ "$OUTPUT" != "" ]; then
   DESTDIR=${OUTPUT}/$VENDORSTR/$NAMESTR/$VERSIONSTR
else
   DESTDIR=$VENDORSTR/$NAMESTR/$VERSIONSTR 
fi

# Verify input file name format
if [ -z $VENDORSTR -o -z $NAMESTR -o -z $VERSIONSTR ]; then
   echo "Pack file name not in standard format: VENDOR.PACKNAME.VER1.VER2.VER3.pack"
   exit 204
fi 

# Does the destination folder exist, if specified?
if [ "$FORCE" == "1" -a -d "$DESTDIR" ]; then
   # Output folder exists and user has requested forcible overwrite
   # Note: Windows bash rm has problems with recursive operation and *
   # PDSC file is overwritten with -o option to unzip below
   rm -rf "$DESTDIR"
   RET=$?
   if [ $RET -ne 0 ]; then
      echo "Could not remove existing output folder contents"
      exit $RET
   fi
fi
if [ ! -d "$DESTDIR" ]; then
   # Create the destination folder as it doesn't yet exist
   mkdir -p "$DESTDIR"
   RET=$?
   if [ $RET -ne 0 ]; then
      echo "Could not create destination folder at $DESTDIR"
      exit $RET 
   fi
else
    echo "Destination folder already exists at $DESTDIR"
	echo "Please use the -force option to overwrite it"
	exit 205 
fi

# Copy the input file to destination folder, renaming it with a ZIP extension
cp -f "$INPUT" "$DESTDIR/$INPUT_FILE.zip"
RET=$?
if [ $RET -ne 0 ]; then
   echo "Copying the pack file failed"
   exit $RET
fi

# Unzip the archive file at the specified location
unzip -q -o "$DESTDIR/$INPUT_FILE.zip" -d "$DESTDIR"
RET=$?
if [ $RET -ne 0 ]; then
   echo "Extracting the pack file failed. Please verify it is a valid CMSIS Pack file."
   exit $RET
fi

# Remove archive file copy we created
if [ -e "$DESTDIR/$INPUT_FILE.zip"  ]; then
   rm "$DESTDIR/$INPUT_FILE.zip" 
   RET=$?
fi
if [ -e "$DESTDIR/$INPUT_FILE.zip"  -o $? -ne 0 ]; then
   echo "Could not remove temporary pack file"
   exit $RET
fi

# Simple validation check - was a PDSC file extracted?
if [ ! -e "$DESTDIR/$VENDORSTR.$NAMESTR.pdsc" ]; then
   echo "Did not find a PDSC file in extracted files. Please verify the input pack file is a valid CMSIS Pack file."
   exit 206
fi

# And we're done...
exit 0
